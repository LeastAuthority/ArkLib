/-
Copyright (c) 2025 ArkLib Contributors. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Least Authority
-/

import ArkLib.Data.CodingTheory.FieldReedSolomon
import ArkLib.Data.CodingTheory.ListDecodeability
import ArkLib.Data.CodingTheory.RelativeHammingDistance

import Mathlib.Probability.ProbabilityMassFunction.Basic
import Mathlib.Probability.Distributions.Uniform
import Mathlib.Data.Fintype.Basic


open ReedSolomon ListDecodable Finset
namespace OutOfDomSmpl
variable {F : Type*} [Field F] [Fintype F] [DecidableEq F]
         {Œπ : Finset F}

/-! Section 4.3 in https://eprint.iacr.org/2024/390.pdf -/

def domainComplement (Œπ : Finset F) : Finset F :=
  Finset.univ \ Œπ

/-- Pr_{r‚ÇÄ, ‚Ä¶, r‚Çõ‚Çã ‚ÇÅ  ‚Üê ùîΩ\L} [‚àÉ distinct u, u‚Ä≤ ‚àà List(f, d, Œ¥) :
‚àÄ i ‚àà [0...s-1], u(r_i) = u‚Ä≤(r_i)] -/
noncomputable def listDecodingCollisionProbability
  (f : Œπ ‚Üí F) (Œ¥ : ‚Ñù) (s : ‚Ñï) (degree : ‚Ñï) (domain : Œπ ‚Ü™ F)
  (h_nonempty : Nonempty (domainComplement Œπ)) : ENNReal :=
  (PMF.uniformOfFintype (Fin s ‚Üí domainComplement Œπ)).toOuterMeasure { r |
    ‚àÉ (u u' : code F Œπ domain degree),
    -- ‚àÉ (u u' : (relHammingBall (toLinearCode C) f Œ¥)),
      u.val ‚â† u'.val ‚àß -- both u and u' lie within Œ¥ of some target f
      u.val ‚àà relHammingBall ‚Üë(code F Œπ domain degree) f Œ¥ ‚àß
      u'.val ‚àà relHammingBall ‚Üë(code F Œπ domain degree) f Œ¥ ‚àß
    -- their interpolating polynomials agree on each sampled r_i
      ‚àÄ i : Fin s,
        (decode u).eval (r i).val = (decode u').eval (r i).val
  }

lemma out_of_dom_smpl_1
  {Œ¥ l : ‚Ñù} {s : ‚Ñï} {f : Œπ ‚Üí F} {degree : ‚Ñï} {domain : Œπ ‚Ü™ F}
  (C : Set (Œπ ‚Üí F)) (hC : C = code F Œπ domain degree)
  (h_decodable : listDecodable ‚ÜëC Œ¥ l)
  (h_nonempty : Nonempty (domainComplement Œπ))  :
  listDecodingCollisionProbability f Œ¥ s degree domain h_nonempty ‚â§
    (ENNReal.ofReal (l * (l-1) / 2)) * ((degree - 1) / (Fintype.card F - Œπ.card))^s
  := by sorry

lemma out_of_dom_smpl_2
  {Œ¥ l : ‚Ñù} {s : ‚Ñï} {f : Œπ ‚Üí F} {degree : ‚Ñï} {domain : Œπ ‚Ü™ F}
  (C : Set (Œπ ‚Üí F)) (hC : C = code F Œπ domain degree)
  (h_decodable : listDecodable ‚ÜëC Œ¥ l)
  (h_nonempty : Nonempty (domainComplement Œπ)) :
  listDecodingCollisionProbability f Œ¥ s degree domain h_nonempty ‚â§
    (ENNReal.ofReal (l^2 / 2)) * (degree / (Fintype.card F - Œπ.card))^s
  := by sorry

end OutOfDomSmpl
